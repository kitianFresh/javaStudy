基本版
---------------------------------------------------------------------------------------------------------------------------
0.4.实现一个窗口，并画出tank，tank可以移动，并可以用上下左右键控制移动

0.41.双缓冲技术解决闪烁问题

0.7.设计tank类，提高扩展性，从而可以无限加tank

0.8.使tank可以往8个方向走

1.0.添加炮弹类，按下某个键，可以发射子弹

1.1.添加fire（）方法，且更改子弹发射位置，使其从tank中心发出。并且引入常量width和height

1.2.解决tank停下来时，无法发射炮弹的问题，添加炮筒。并使得所有被打出的炮弹可以被画出,此版本还将missiles变量放在了TankClient中，在Tank中使用引用类实现对missiles的访问

1.4.解决Tank越界的问题

1.5.新增敌人tank

1.6.Tank子弹可以打中敌人并使敌人消失

1.7.新增Explode类，模拟爆炸效果

1.8.新增多个敌人tank

1.9.使敌人tank可以随机移动

1.91.使敌人可以发射炮弹，并能击毙对方

2.0.新增Wall类，使得tank和子弹不会穿透wall。且改进tank相互穿透的现象.在这里引入记录以前位置的变量pre_x,pre_y

2.2.增加超级炮弹，按某个键是的tank往8个方向发射炮弹

2.3.增加生命值。

2.4.给mytank增加一个血条；

2.5.增加tank 的吃血功能；

2.6.完善功能

------------------------------------------------------------------------------------------------------------------------
图片版
2.7.新增枚举类enum Direction ，因为Direction子弹、炮筒、坦克都要用，而不是属于坦克一个；

2.8.加入爆炸Explode图片,解决异步IO的问题，先初始化，即启动时就把图片画到看不见的位置。


2.81.加入tank图片，用static{}静态代码块，但是还是没解决第一次没炸弹效果，加入子弹图片

2.9.添加配置文件，增加程序的灵活性

---------------------------------------------------------------------------------------------------------------------------
网络版
1.9.1.客户端NetClient和服务端TankServer建立TCP连接

1.9.3.客户端向服务端发送tank加入消息UDP数据包

1.9.4.TankServer转发客户端发来的UDP数据包

1.9.5.使用多态实现各种类型消息的发送和解析

1.9.6.修复后加入的tank看不到已经存在的tank的bug，采用方法是每次接受到有新tank加入消息时，就把自己存在的消息发给server，让server再转发一次来通知新tank

1.9.7.用对话框解决端口占用问题

1.9.8.增加子弹消息MissileNewMsg

1.9.9.相互可以对战，并能打死对方

1.9.10.添加子弹死亡消息MissileDeadMsg


网络版不足之处：1.Server不够高效，没有队列处理等
                2.消息协议不够精细
                3.没有线程同步，应该有同步线程负责每隔一段时间发送数据以同步客户端
		4.tank退出后的处理，另开一个udp端口专门负责
		5.一段时间没有接受导数据的处理，断线处理
		6.更加精细的内存控制